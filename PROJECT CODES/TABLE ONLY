CREATE TABLE CLINIC
(
PERSON_ID INT PRIMARY KEY NOT NULL,
TYPE_ID INT NOT NULL,
FIRST_NAME VARCHAR(99) NOT NULL,
LAST_NAME VARCHAR(99) NOT NULL
);


CREATE TABLE INFORMATION
(
PERSON_ID INT PRIMARY KEY NOT NULL,
GUARDIAN_ID INT UNIQUE NOT NULL,
MOBILE_NO INT NOT NULL,
GENDER VARCHAR(10) NOT NULL,
BIRTH_NATIONALITY VARCHAR(50) NOT NULL,
BIRTH_DATE DATE NOT NULL,
CITY VARCHAR(40) NOT NULL,
CAMPUS VARCHAR(20) NOT NULL,
FOREIGN KEY (PERSON_ID) REFERENCES CLINIC(PERSON_ID)
ON DELETE CASCADE
);


CREATE TABLE GUARDIAN
(
GUARDIAN_ID INT PRIMARY KEY NOT NULL,
FIRST_NAME VARCHAR(99) NOT NULL,
LAST_NAME VARCHAR(99)NOT NULL,
MOBILE_NO INT NOT NULL,
RELATION VARCHAR(20) NOT NULL,
FOREIGN KEY (GUARDIAN_ID) REFERENCES INFORMATION(GUARDIAN_ID)
ON DELETE CASCADE
);


CREATE TABLE TYPE 
(
TYPE_ID INT PRIMARY KEY NOT NULL, 
TYPE_NAME VARCHAR(50) NOT NULL
);


CREATE TABLE COURSE--LIST OF COURSES IN MAPUA
(
COURSE_ID INT PRIMARY KEY NOT NULL,
COURSE_CODE VARCHAR(10) NOT NULL,
COURSE_NAME VARCHAR(50) NOT NULL
);


CREATE TABLE STUDENT 
(
PERSON_ID INT PRIMARY KEY NOT NULL,
COURSE_ID INT NOT NULL REFERENCES COURSE(COURSE_ID),
TYPE_ID INT NOT NULL REFERENCES TYPE(TYPE_ID),
STUDENT_YEAR INT NOT NULL,
FOREIGN KEY (PERSON_ID) REFERENCES INFORMATION (PERSON_ID)
ON DELETE CASCADE
);


CREATE TABLE FACULTYJOBS
(
FACULTY_ID INT PRIMARY KEY NOT NULL,
CODE VARCHAR(90),
POSITION VARCHAR(90)
);


CREATE TABLE FACULTY
(
PERSON_ID INT PRIMARY KEY NOT NULL,
FACULTY_ID INT NOT NULL REFERENCES FACULTYJOBS(FACULTY_ID),
FOREIGN KEY (PERSON_ID) REFERENCES INFORMATION(PERSON_ID)
ON DELETE CASCADE
);


CREATE TABLE PERSONINCHARGE
(
PIC_ID INT PRIMARY KEY NOT NULL,
FIRST_NAME VARCHAR(99),
LAST_NAME VARCHAR(99),
POSITION VARCHAR(99)
);


CREATE TABLE FAMILYHISTORY
(
RELATION VARCHAR(99) NOT NULL,
PERSON_ID INT NOT NULL,
LAST_NAME VARCHAR(99) NOT NULL,
FIRST_NAME VARCHAR(99) NOT NULL,
ILLNESS VARCHAR(99) NOT NULL,
FOREIGN KEY (PERSON_ID) REFERENCES INFORMATION(PERSON_ID)
ON DELETE CASCADE
);


CREATE TABLE PHYSICALEXAM 
(
PERSON_ID INT NOT NULL,
PE_NO INT PRIMARY KEY NOT NULL,
HEIGHT_FEET INT NOT NULL,
HEIGHT_INCH INT NOT NULL,
HEART_RATE INT NOT NULL,
HEART_SYSTOLIC INT NOT NULL,
HEART_DIASTOLIC INT NOT NULL,
HEART_IRREGULARITIES VARCHAR(300) NOT NULL,
PERSON_DIAGNOSIS VARCHAR(300) NOT NULL,
FOREIGN KEY (PERSON_ID) REFERENCES INFORMATION(PERSON_ID)
ON DELETE CASCADE
);


CREATE TABLE PHYSICALEXAMHISTORY
(
PE_NO INT PRIMARY KEY NOT NULL,
PE_DATE DATE NOT NULL,
PIC_ID INT NOT NULL REFERENCES PERSONINCHARGE(PIC_ID),
FOREIGN KEY(PE_NO) REFERENCES PHYSICALEXAM (PE_NO)
ON DELETE CASCADE
);


CREATE TABLE PERSONALCONSULTATION
(
PERSON_ID INT NOT NULL,
PC_NO INT PRIMARY KEY NOT NULL,
SUBJECTCOMPLAINTS VARCHAR(300) NOT NULL,
OBJECTFINDINGS VARCHAR(300) NOT NULL,
ASSESSMENT VARCHAR(300) NOT NULL,
PLANS VARCHAR(300) NOT NULL,
FOREIGN KEY (PERSON_ID) REFERENCES INFORMATION(PERSON_ID)
ON DELETE CASCADE
);


CREATE TABLE PERSONALCONSULTATIONHISTORY
(
PC_NO INT PRIMARY KEY NOT NULL,
PC_DATE DATE NOT NULL,
PIC_ID INT NOT NULL REFERENCES PERSONINCHARGE(PIC_ID),
FOREIGN KEY (PC_NO) REFERENCES PERSONALCONSULTATION(PC_NO)
ON DELETE CASCADE
);


CREATE TABLE DIAGNOSIS
(
PERSON_ID INT NOT NULL,
DIAGNOSIS_DESCRIPTION VARCHAR(500),
D_NO INT PRIMARY KEY NOT NULL,
FOREIGN KEY (PERSON_ID) REFERENCES INFORMATION(PERSON_ID)
ON DELETE CASCADE
);


CREATE TABLE DIAGNOSISHISTORY
(
D_NO INT PRIMARY KEY NOT NULL,
D_DATE DATE NOT NULL,
PIC_ID INT NOT NULL REFERENCES PERSONINCHARGE(PIC_ID),
FOREIGN KEY (D_NO) REFERENCES DIAGNOSIS(D_NO)
ON DELETE CASCADE
);


CREATE TABLE DRUG
(
D_NO INT NOT NULL,
NAME VARCHAR(90) NOT NULL,
COST INT NOT NULL,							
QUANTITY INT NOT NULL,
FOREIGN KEY (D_NO) REFERENCES DIAGNOSIS(D_NO)
ON DELETE CASCADE
);


CREATE TABLE ACCOUNT
(
PIC_ID INT PRIMARY KEY NOT NULL,
USERNAME VARCHAR(90) NOT NULL,
PASSWORD VARCHAR(90) NOT NULL
);

--ADD PIC ACC TKIP
